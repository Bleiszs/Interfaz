from tkinter import *


raiz=Tk()


raiz.title("Registro de Alumno")

raiz.geometry("630x550") 
raiz.resizable(False,False)

ventana=Frame(raiz)
ventana.grid(row=1,column=0)



#Etiquetas__________________________________________________________________________
nombre=Label(ventana, text="Nombre(s):")
nombre.grid(row=0, column=0,padx=4,pady=4)


apellido_p=Label(ventana, text="Apellido Paterno:")
apellido_p.grid(row=0, column=1,padx=4,pady=4)

apellido_m=Label(ventana, text="Apellido Materno:")
apellido_m.grid(row=0, column=2,padx=4,pady=4)


edad=Label(ventana, text="Edad:")
edad.grid(row=2, column=0,padx=4,pady=4)

direccion=Label(ventana, text="Direccion:")
direccion.grid(row=2, column=1,padx=4,pady=4)


correo=Label(ventana, text="Correo Electronico:")
correo.grid(row=2, column=2,padx=4,pady=4)

telefono=Label(ventana, text="Telefono:")
telefono.grid(row=4, column=0,padx=4,pady=4)


observaciones=Label(ventana, text="Observaciones:")
observaciones.grid(row=6, column=1,padx=4,pady=4)

carrera=Label(ventana, text="Selecciona la Carrera:")
carrera.grid(row=4, column=1,padx=4,pady=4)

genero=Label(ventana, text="Selecciona el Genero:")
genero.grid(row=4, column=2,padx=4,pady=4)

info_accesada=Label(ventana, text="Verificar la Informacion:")
info_accesada.grid(row=13, column=1 ,padx=4,pady=4)





#Cuadros de texto___________________________________________________________________

nombre_cuadro=Entry(ventana, width=33)
nombre_cuadro.grid(column=0, row=1, pady=4,padx=4)

apellido_p_cuadro=Entry(ventana, width=33)
apellido_p_cuadro.grid(column=1, row=1, pady=4,padx=4)

apellido_m_cuadro=Entry(ventana, width=33)
apellido_m_cuadro.grid(column=2, row=1, pady=4,padx=4)

edad_cuadro=Entry(ventana, width=33)
edad_cuadro.grid(column=0, row=3, pady=4,padx=4)


direccion_cuadro=Entry(ventana, width=33)
direccion_cuadro.grid(column=1, row=3, pady=4,padx=4)


correo_cuadro=Entry(ventana, width=33)
correo_cuadro.grid(column=2, row=3, pady=4,padx=4)

telefono_cuadro=Entry(ventana, width=33)
telefono_cuadro.grid(column=0, row=5, pady=4,padx=4)

observaciones_cuadro=Entry(ventana)
observaciones_cuadro.grid(column=0, row=7, pady=4, padx=4, columnspan=6)
observaciones_cuadro.config(width=100)
observaciones_cuadro.insert(0, "Sin observaciones")


info_accesada_cuadro= Listbox(ventana)
info_accesada_cuadro.grid(row=14, column=0 ,padx=4,pady=4, columnspan=5)
info_accesada_cuadro.config(width=100, height=12)



#Menu de Opciones___________________________________________________________________

carreras = ["", "Ing. Industrial", "Ing. Civil", "Ing. en Mecatrónica"]
carrera_seleccionada = StringVar(ventana)
carrera_seleccionada.set(carreras[0]) 
combo = OptionMenu(ventana, carrera_seleccionada, *carreras)
combo.grid(column=1, row=5, pady=4,padx=4)
combo.config(width=26)

#Menu de Opciones___________________________________________________________________________
genero = [""," Masculino","Femenino","Otro"]
genero_seleccionado = StringVar(ventana)
genero_seleccionado.set(genero[0])
combo = OptionMenu(ventana, genero_seleccionado, *genero)
combo.grid(column=2, row=5, pady=4,padx=4)
combo.config(width=26)
 


#Funciones__________________________________________________________________






contador = 0


def sigui():
    
    
    global contador
    
   
    if contador == 0:
        siguiente = [
    info_accesada_cuadro.insert(0, "*****Nuevo Registro******"),
    info_accesada_cuadro.insert(1, nombre_cuadro.get()),
    info_accesada_cuadro.insert(2, apellido_p_cuadro.get()),
    info_accesada_cuadro.insert(3, apellido_m_cuadro.get()),
    info_accesada_cuadro.insert(4, edad_cuadro.get()),
    info_accesada_cuadro.insert(5, direccion_cuadro.get()),
    info_accesada_cuadro.insert(6, correo_cuadro.get()),
    info_accesada_cuadro.insert(7, telefono_cuadro.get()),
    info_accesada_cuadro.insert(8, carrera_seleccionada.get()),
    info_accesada_cuadro.insert(9, genero_seleccionado.get()),
    info_accesada_cuadro.insert(10, observaciones_cuadro.get())
                    ]
        contador = contador + 1
        
    if not telefono_cuadro.get().isdigit():
        mensaje = "El teléfono solo debe contener números"
        messagebox.showinfo("Advertencia", mensaje)
        telefono_cuadro.delete(0,END)
        
    if not edad_cuadro.get().isdigit():
       mensaje = "La Edad solo debe contener números"
       messagebox.showinfo("Advertencia", mensaje)
       edad_cuadro.delete(0,END)
       
    if nombre_cuadro.get() == "" or apellido_p_cuadro.get() == "" or apellido_m_cuadro.get() == "" or edad_cuadro.get() == "" or direccion_cuadro.get() == "" or correo_cuadro.get() == "" or telefono_cuadro.get() == "" or carrera_seleccionada.get() == "" or genero_seleccionado.get() == "" or observaciones_cuadro.get() == "":
        mensaje = "Faltan Espacios Por Completar"
        messagebox.showinfo("Advertencia", mensaje)
        info_accesada_cuadro.delete(0,END)
        contador = 0
        
  
        


def guardar():
    global contador

    if contador == 1:
        elementos = info_accesada_cuadro.get('0', 'end')
        archivo = "datos.txt"
        with open(archivo, "a") as f:
            f.write("\n".join(elementos) + "\n\n")

        messagebox.showinfo("Registro", "El registro se ha guardado correctamente.")

    else:
        messagebox.showinfo("Guardar", "No hay información para guardar.")
 


def limpiar():
    global contador
    nombre_cuadro.delete(0, "end")
    apellido_p_cuadro.delete(0, "end")
    apellido_m_cuadro.delete(0, "end")
    edad_cuadro.delete(0, "end")
    direccion_cuadro.delete(0, "end")
    correo_cuadro.delete(0, "end")
    telefono_cuadro.delete(0, "end")
    observaciones_cuadro.delete(0, "end")
    observaciones_cuadro.insert(0, "Sin Observaciones")
    carrera_seleccionada.set(carreras[0])
    genero_seleccionado.set(genero[0])
    info_accesada_cuadro.delete(0, 'end')
    contador = 0

    
def eliminaregistro():
    global contador
    numero_registro = simpledialog.askinteger("Eliminar Registro", "Ingrese el número de registro a eliminar:")
    if numero_registro is not None:
        if messagebox.askyesno("Eliminar Registro", f"¿Estás seguro de eliminar el registro número {numero_registro}?"):
            elementos = info_accesada_cuadro.get('0', 'end')
            registros = elementos.split("\n\n")
            if 1 <= numero_registro <= len(registros):
                registros.pop(numero_registro - 1)
                with open(archivo, "w") as f:
                    f.write("\n\n".join(registros))
                messagebox.showinfo("Eliminar Registro", "El registro ha sido eliminado correctamente.")
            else:
                messagebox.showinfo("Eliminar Registro", "El número de registro ingresado no es válido.")
        else:
            messagebox.showinfo("Eliminar Registro", "No se eliminó el registro.")



    
    
#Botones___________________________________________________________________


boton_siguiente=Button(ventana, text="Siguiente", command= sigui)
boton_siguiente.grid(column=2, row= 12,padx=4,pady=4)
boton_siguiente.config(width=15, background="#CDCDB5")

boton_limpiar=Button(ventana, text="limpiar", command= limpiar)
boton_limpiar.grid(column=0, row= 15,padx=4,pady=4)
boton_limpiar.config(width=15, background="#FFFF00")


boton_guardar=Button(ventana, text="Guardar", command= guardar)
boton_guardar.grid(column=1, row= 15,padx=4,pady=4)
boton_guardar.config(width=27, background="gray65")


boton_eliminar=Button(ventana, text="Eliminar Registro", command= eliminaregistro)
boton_eliminar.grid(column=2, row= 15,padx=4,pady=4)
boton_eliminar.config(width=15, background="#AFAFEE")






raiz.mainloop()
